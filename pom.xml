<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.thelastcheck</groupId>
  <artifactId>tlc-open-parent</artifactId>
  <version>1</version>
  <packaging>pom</packaging>
  <name>tlc-open-parent</name>
  <organization>
    <name>The Last Check, LLC</name>
    <url>http://www.thelastcheck.com</url>
  </organization>
  <inceptionYear>2009</inceptionYear>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <issueManagement>
    <system>Jira</system>
    <url>http://thelastcheck.atlassian.net/</url>
  </issueManagement>
  <scm>
    <connection>scm:git:https://bitbucket.org/jerry.bowman/tlc.open.java.git</connection>
    <developerConnection>scm:git:https://bitbucket.org/jerry.bowman/tlc.open.java.git</developerConnection>
  </scm>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <git-commit-id-plugin-version>2.1.7</git-commit-id-plugin-version>
    <properties-plugin>1.0-alpha-2</properties-plugin>
    <groovy-version>2.3.8</groovy-version>
    <groovy-eclipse-compiler-version>2.9.0-01</groovy-eclipse-compiler-version>
    <groovy-eclipse-batch-version>2.3.7-01</groovy-eclipse-batch-version>
    <jdk-version>1.7</jdk-version>
    <maven-compiler-version>2.3.2</maven-compiler-version>
    <maven-jar-plugin-version>2.4</maven-jar-plugin-version>
    <maven-javadoc-version>2.8</maven-javadoc-version>
    <maven-source-version>2.1.2</maven-source-version>
    <maven-release-version>2.4.1</maven-release-version>
    <maven-surefire-version>2.14.1</maven-surefire-version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <git.commit.id.abbrev>TBD</git.commit.id.abbrev>
    <git.build.time>TBD</git.build.time>
    <git.branch>TBD</git.branch>
  </properties>
  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <excludes>
          <exclude>**/*.zft</exclude>
          <exclude>**/*.dat</exclude>
          <exclude>**/*.bin</exclude>
        </excludes>
      </resource>
      <!-- binary things shouldn't be filtered -->
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>**/*.zft</include>
          <include>**/*.dat</include>
          <include>**/*.bin</include>
        </includes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
        <excludes>
          <exclude>**/*local*.csv</exclude>
          <exclude>**/*local*.zip</exclude>
          <exclude>**/*.zft</exclude>
          <exclude>**/*.bin</exclude>
          <exclude>**/*.dat</exclude>
        </excludes>
      </testResource>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>**/*.zft</include>
          <include>**/*.bin</include>
          <include>**/*.dat</include>
        </includes>
      </testResource>
    </testResources>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-version}</version>
          <configuration>
            <source>${jdk-version}</source>
            <target>${jdk-version}</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-version}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <phase>verify</phase>
              <goals>
                <goal>jar</goal>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${maven-release-version}</version>
          <configuration>
            <!--
              During release:perform, enable the "release" profile
            <releaseProfiles>release</releaseProfiles>
             -->
            <goals>install</goals>
          </configuration>
        </plugin>
        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <version>${git-commit-id-plugin-version}</version>
          <executions>
            <execution>
              <goals>
                <goal>revision</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <dotGitDirectory>${project.parent.basedir}/../.git</dotGitDirectory>
            <generateGitPropertiesFile>true</generateGitPropertiesFile>
            <generateGitPropertiesFilename>${project.basedir}/src/main/resources/git.properties</generateGitPropertiesFilename>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>properties-maven-plugin</artifactId>
          <version>${properties-plugin}</version>
          <executions>
            <execution>
              <id>read-props</id>
              <phase>initialize</phase>
              <goals>
                <goal>read-project-properties</goal>
              </goals>
              <configuration>
                <files>
                  <file>${project.basedir}/src/main/resources/git.properties</file>
                </files>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>latex-maven-plugin</artifactId>
          <version>1.1</version>
          <configuration>
            <binariesPath>${latex.path}</binariesPath>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin-version}</version>
          <executions>
            <execution>
              <id>default-jar</id>
              <phase>package</phase>
              <goals>
                <goal>jar</goal>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
              <manifestSections>
                <manifestSection>
                  <name>Build-Information</name>
                  <manifestEntries>
                    <Official-Name>${project.name}</Official-Name>
                    <Version>${project.version}</Version>
                    <Revision>${git.commit.id.abbrev}</Revision>
                    <Build-Time>${git.build.time}</Build-Time>
                    <Scm-Location>${git.branch}</Scm-Location>
                  </manifestEntries>
                </manifestSection>
              </manifestSections>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-version}</version>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.surefire</groupId>
              <artifactId>surefire-junit47</artifactId>
              <version>${maven-surefire-version}</version>
            </dependency>
          </dependencies>
          <configuration>
            <skipTests>false</skipTests>
            <testFailureIgnore>false</testFailureIgnore>
            <forkMode>always</forkMode>
            <argLine>
              -Dtlc.home=target/test-classes -Dviex.home=target/test-classes
            </argLine>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-version}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <phase>verify</phase>
              <goals>
                <goal>jar-no-fork</goal>
                <goal>test-jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>use-groovy-compiler</id>
      <activation>
        <file>
          <exists>src/main/groovy</exists>
        </file>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.codehaus.groovy</groupId>
          <artifactId>groovy-all</artifactId>
          <version>${groovy-version}</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <compilerId>groovy-eclipse-compiler</compilerId>
              <source>${jdk-version}</source>
              <target>${jdk-version}</target>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-eclipse-compiler</artifactId>
                <version>${groovy-eclipse-compiler-version}</version>
              </dependency>
              <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-eclipse-batch</artifactId>
                <version>${groovy-eclipse-batch-version}</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>create-git-properties</id>
      <activation>
        <file>
          <exists>src/main/resources</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>pl.project13.maven</groupId>
            <artifactId>git-commit-id-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>properties-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- profile to build -config.zip file for a project -->
    <profile>
      <id>config-assembly</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <file>
          <exists>src/main/config</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>com.thelastcheck</groupId>
                <artifactId>tlc-assemblies</artifactId>
                <version>1.0.0</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>make-assembly</id>
                <!-- this is used for inheritance merges -->
                <phase>package</phase>
                <!-- bind to the packaging phase -->
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <descriptorRefs>
                    <descriptorRef>config</descriptorRef>
                  </descriptorRefs>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>tlc.repositories</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <!-- ******************************************************* -->
      <!-- repositories for jar artifacts -->
      <!-- ******************************************************* -->
      <repositories>
        <repository>
          <id>maven default</id>
          <name>CodeHaus Snapshot Site</name>
          <url>http://repo1.maven.org/</url>
          <releases/>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>
        <repository>
          <id>codehaus-snapshot</id>
          <name>CodeHaus Snapshot Site</name>
          <url>http://snapshots.repository.codehaus.org/</url>
          <releases/>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>
        <repository>
          <id>codehaus-dist</id>
          <name>CodeHaus Distribution Site</name>
          <url>http://dist.codehaus.org/mule/dependencies/maven2/</url>
          <releases/>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>
        <repository>
          <id>google-code</id>
          <name>Google's open source releases</name>
          <url>http://google-maven-repository.googlecode.com/svn/repository</url>
          <releases/>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>
        <repository>
          <id>codehaus</id>
          <name>Codehaus Maven2 releases</name>
          <url>http://repository.codehaus.org</url>
          <releases/>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>
      </repositories>
      <!-- ******************************************************* -->
      <!-- repositories for maven plugins -->
      <!-- ******************************************************* -->
      <pluginRepositories>
        <pluginRepository>
          <id>maven default</id>
          <name>CodeHaus Snapshot Site</name>
          <url>http://repo1.maven.org/</url>
          <releases/>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </pluginRepository>
        <pluginRepository>
          <id>codehau-snapshot</id>
          <name>CodeHaus Snapshot Site</name>
          <url>http://snapshots.repository.codehaus.org/</url>
          <releases/>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </pluginRepository>
        <pluginRepository>
          <id>codehaus-dist</id>
          <name>CodeHaus Distribution Site</name>
          <url>http://dist.codehaus.org/mule/dependencies/maven2/</url>
          <releases/>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </pluginRepository>
        <pluginRepository>
          <id>google-code</id>
          <name>Google's open source releases</name>
          <url>http://google-maven-repository.googlecode.com/svn/repository</url>
          <releases/>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </pluginRepository>
        <pluginRepository>
          <id>codehaus</id>
          <name>Codehaus Maven2 releases</name>
          <url>http://repository.codehaus.org</url>
          <releases/>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </pluginRepository>
      </pluginRepositories>
    </profile>
    <profile>
      <id>no-tests</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven-surefire-version}</version>
            <dependencies>
              <dependency>
                <groupId>org.apache.maven.surefire</groupId>
                <artifactId>surefire-junit47</artifactId>
                <version>${maven-surefire-version}</version>
              </dependency>
            </dependencies>
            <configuration>
              <skipTests>true</skipTests>
              <testFailureIgnore>false</testFailureIgnore>
              <forkMode>always</forkMode>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
